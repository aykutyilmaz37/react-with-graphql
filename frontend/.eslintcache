[{"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\index.js":"1","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\App.js":"2","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\helpers\\private-route.js":"3","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Auth.js":"4","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Orders.js":"5","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Events.js":"6","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\context\\auth-context.js":"7","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Navigation\\Navbar.js":"8","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Spinner\\Spinner.js":"9","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Modal\\Modal.js":"10","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrdersChart\\OrdersChart.js":"11","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrdersControl\\OrdersControl.js":"12","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Events\\EventList\\EventList.js":"13","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrderList\\OrderList.js":"14","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Backdrop\\Backdrop.js":"15","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Events\\EventItem\\EventItem.js":"16","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrderItem\\OrderItem.js":"17"},{"size":197,"mtime":1609322435000,"results":"18","hashOfConfig":"19"},{"size":1314,"mtime":1609322435000,"results":"20","hashOfConfig":"19"},{"size":462,"mtime":1609322435000,"results":"21","hashOfConfig":"19"},{"size":3142,"mtime":1609322435000,"results":"22","hashOfConfig":"19"},{"size":3487,"mtime":1609322435000,"results":"23","hashOfConfig":"19"},{"size":7283,"mtime":1609322435000,"results":"24","hashOfConfig":"19"},{"size":209,"mtime":1609322435000,"results":"25","hashOfConfig":"19"},{"size":1121,"mtime":1609322435000,"results":"26","hashOfConfig":"19"},{"size":265,"mtime":1609322435000,"results":"27","hashOfConfig":"19"},{"size":1176,"mtime":1609322435000,"results":"28","hashOfConfig":"19"},{"size":1714,"mtime":1609322435000,"results":"29","hashOfConfig":"19"},{"size":589,"mtime":1609322435000,"results":"30","hashOfConfig":"19"},{"size":533,"mtime":1609322435000,"results":"31","hashOfConfig":"19"},{"size":445,"mtime":1609322435000,"results":"32","hashOfConfig":"19"},{"size":155,"mtime":1609322435000,"results":"33","hashOfConfig":"19"},{"size":555,"mtime":1609322435000,"results":"34","hashOfConfig":"19"},{"size":398,"mtime":1609322435000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19z7ynj",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\index.js",[],["74","75"],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\App.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\helpers\\private-route.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Auth.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Orders.js",["76"],"import React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport \"../assets/scss/Orders.scss\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport OrderList from \"../components/Orders/OrderList/OrderList\";\nimport OrdersChart from \"../components/Orders/OrdersChart/OrdersChart\";\nimport OrdersControl from \"../components/Orders/OrdersControl/OrdersControl\";\n\nconst Orders = () => {\n  const [loading, setLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [outputType, setOutputType] = useState(\"list\");\n  const context = useContext(AuthContext);\n  const token = context.token;\n  const { REACT_APP_GRAPHQL } = process.env;\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const fetchOrders = () => {\n    setLoading(true);\n    const requestBody = {\n      query: `\n          query{\n            orders{\n              _id\n             createdAt\n             event{\n               _id\n               title\n               date\n               price\n             }\n            }\n          }\n        `,\n    };\n\n    fetch(`${REACT_APP_GRAPHQL}`, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const orders = resData.data.orders;\n        setOrders(orders);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const deleteOrderHandler = (orderId) => {\n    setLoading(true);\n    const requestBody = {\n      query: `\n        mutation CancelOrder($id:ID!) {\n          cancelOrder(orderId: $id) {\n            _id\n            title\n          }\n        }      \n        `,\n      variables: {\n        id: orderId,\n      },\n    };\n\n    fetch(`${REACT_APP_GRAPHQL}`, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const data = orders.filter((order) => {\n          return order._id !== orderId;\n        });\n        setOrders(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const changeOutputTypeHandler = (outputType) => {\n    if (outputType === \"list\") {\n      setOutputType(\"list\");\n    } else {\n      setOutputType(\"chart\");\n    }\n  };\n\n  let content = <Spinner />;\n  if (!loading) {\n    content = (\n      <Fragment>\n        <OrdersControl\n          activeOutputType={outputType}\n          onChange={changeOutputTypeHandler}\n        />\n        <div>\n          {outputType === \"list\" ? (\n            <OrderList orders={orders} onDelete={deleteOrderHandler} />\n          ) : (\n            <OrdersChart orders={orders} />\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"orders\">\n        <h1 className=\"text-center\">Orders Page</h1>\n        {content}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Orders;\n","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\pages\\Events.js",["77"],"import React, { Fragment, useState, useContext, useEffect } from \"react\";\nimport \"../assets/scss/Events.scss\";\nimport AuthContext from \"../context/auth-context\";\nimport Modal from \"../components/Modal/Modal\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport EventList from \"../components/Events/EventList/EventList\";\n\nconst Events = () => {\n  const [creating, setCreating] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [viewingDetail, setViewingDetail] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [eventList, setEventList] = useState([]);\n  const context = useContext(AuthContext);\n  const token = context.token;\n  const { REACT_APP_GRAPHQL } = process.env;\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = () => {\n    setLoading(true);\n    const requestBody = {\n      query: `\n          query{\n            events{\n              _id\n              title\n              description\n              price\n              date\n              creator{\n                _id\n                email\n              }\n            }\n          }\n        `,\n    };\n\n    fetch(`${REACT_APP_GRAPHQL}`, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const events = resData.data.events;\n        setEventList(events);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const createEventHandler = () => {\n    setCreating(true);\n  };\n\n  const modalConfirmHandler = () => {\n    setCreating(false);\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n    const event = {\n      title,\n      price,\n      date,\n      description,\n    };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n          mutation CreateEvent($title:String!, $description:String!, $price:Float!,$date:String!){\n            createEvent(eventInput:{title:$title, description:$description,price:$price,date:$date}){\n              _id\n              title\n              description\n              price\n              date\n              creator{\n                _id\n                email\n              }\n            }\n          }\n        `,\n      variables: {\n        title: title,\n        description: description,\n        price: parseFloat(price),\n        date: date,\n      },\n    };\n\n    fetch(`${REACT_APP_GRAPHQL}`, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        fetchEvents();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const modalCancelHandler = () => {\n    setCreating(false);\n    setViewingDetail(false);\n  };\n\n  const showDetailHandler = (eventId) => {\n    const selectedEvent = eventList.find((e) => e._id === eventId);\n    setSelectedEvent(selectedEvent);\n    setViewingDetail(true);\n  };\n\n  const orderEventHandler = () => {\n    if (!context.token) {\n      setSelectedEvent(null);\n      setViewingDetail(false);\n      return;\n    }\n    const requestBody = {\n      query: `\n      mutation OrderEvent($id:ID!) {\n            orderEvent(eventId: $id) {\n              _id\n              createdAt\n              updatedAt\n            }\n          }\n        `,\n      variables: {\n        id: selectedEvent._id,\n      },\n    };\n\n    fetch(`${REACT_APP_GRAPHQL}`, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        setSelectedEvent(null);\n        setViewingDetail(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"events\">\n        <h1 className=\"text-center\">Events Page</h1>\n        <Modal\n          isOpen={creating}\n          title=\"Add Event\"\n          canCancel\n          canConfirm\n          confirmText=\"Confirm\"\n          onCancel={modalCancelHandler}\n          onConfirm={modalConfirmHandler}\n        >\n          <form>\n            <div className=\"form-control\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"price\">Price</label>\n              <input\n                type=\"number\"\n                id=\"price\"\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"datetime-local\"\n                id=\"date\"\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                type=\"text\"\n                id=\"description\"\n                row=\"4\"\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n          </form>\n        </Modal>\n        <Modal\n          isOpen={viewingDetail}\n          title={selectedEvent?.title}\n          canCancel\n          canConfirm\n          confirmText={context.token ? \"Order Now\" : \"Confirm\"}\n          onCancel={modalCancelHandler}\n          onConfirm={orderEventHandler}\n        >\n          <h1>{selectedEvent?.title}</h1>\n          <h2>\n            ${selectedEvent?.price} -\n            {new Date(selectedEvent?.date).toLocaleString(\"tr-TR\")}\n          </h2>\n          <p>{selectedEvent?.description}</p>\n        </Modal>\n        {context.token && (\n          <div className=\"events__control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={createEventHandler}>\n              Create Event\n            </button>\n          </div>\n        )}\n        {loading ? (\n          <Spinner />\n        ) : (\n          <EventList\n            events={eventList}\n            authUserId={context.userId}\n            onViewDetail={showDetailHandler}\n          />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Events;\n","C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\context\\auth-context.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Navigation\\Navbar.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Spinner\\Spinner.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrdersChart\\OrdersChart.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrdersControl\\OrdersControl.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Events\\EventList\\EventList.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrderList\\OrderList.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Backdrop\\Backdrop.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Events\\EventItem\\EventItem.js",[],"C:\\Users\\Aykut\\Desktop\\Repos\\react-with-graphql\\frontend\\src\\components\\Orders\\OrderItem\\OrderItem.js",[],["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":19,"column":6,"nodeType":"86","endLine":19,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":24,"column":6,"nodeType":"86","endLine":24,"endColumn":8,"suggestions":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'fetchEvents'. Either include it or remove the dependency array.",["95"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [fetchOrders]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchEvents]",{"range":"102","text":"103"},[768,770],"[fetchOrders]",[964,966],"[fetchEvents]"]